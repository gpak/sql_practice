/* Creating Tables and Inserting Values */

CREATE TABLE provider_table (
	provider_id integer PRIMARY KEY,
	provider_name varchar(30),
	created timestamp
);

CREATE TABLE profession_table (
	profession_id integer PRIMARY KEY,
	profession varchar(2)
);

CREATE TABLE provider_profession_table (
	provider_id integer,
	profession_id integer,
	PRIMARY KEY (provider_id, profession_id),
	FOREIGN KEY (provider_id) references provider_table(provider_id) ON DELETE CASCADE,
	FOREIGN KEY (profession_id) references profession_table(profession_id) ON DELETE CASCADE
);

CREATE TABLE provider_practice_table (
	provider_practice_id integer,
	provider_id integer,
	PRIMARY KEY (provider_practice_id),
	FOREIGN KEY (provider_id) references provider_table(provider_id) ON DELETE CASCADE
);

INSERT INTO provider_table (provider_id, provider_name, created)
VALUES ('1', 'John Smith', '3/4/2009 12:45:00'),
	   ('2', 'Michael Rowe', '5/3/2010 15:34:34'),
	   ('3', 'Gregory Adams', '4/5/2011 23:44:59');

INSERT INTO profession_table (profession_id, profession)
VALUES ('1', 'DO'),
	   ('2', 'MD');
	   
INSERT INTO provider_profession_table (provider_id, profession_id)
VALUES ('1', '1'),
	   ('1', '2'),
	   ('2', '2'),
	   ('3', '1'),
	   ('3', '2');

INSERT INTO provider_practice_table (provider_practice_id, provider_id, city)
VALUES ('1', '1', 'Morristown'),
	   ('2', '2', 'Passaic'),
	   ('3', '2', 'Jersey City'),
	   ('4', '1', 'Trenton'),
	   ('5', '2', 'East Rutherford'),
	   ('6', '3', 'Rutherford'),
	   ('7', '1', 'Lyndhurst');
=============================================================================================/* Questions */=========================================     
Question 1:
1.	 List all the providers, ordered by provider name. While outputting the names of all the providers, if the name of the provider contains the word ‘John’, output ‘Johnathan’ instead of ‘John’ within the same output field of provider_name.

UPDATE provider_table
SET 
provider_name = replace(provider_name, 'John', 'Johnathan');

SELECT provider_name
FROM provider_table
ORDER BY provider_name;

2.	 List out the degrees and the counts that are associated to the degree.  If the degree is listed more than twice, output ‘Popular degree’.
SELECT prov.provider_id, prov.provider_name, prof.profession_id, prof.profession
FROM provider_profession_table as ppt

join provider_table as prov 
	ON ppt.provider_id = prov.provider_id

join profession_table as prof
ON  ppt.profession_id = prof.profession_id;
